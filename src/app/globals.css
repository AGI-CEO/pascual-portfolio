@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --dur: 2s;
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

@font-face {
  font-family: "Inter";
  src: url("/assets/fonts/Inter-Regular.ttf") format("truetype");
  font-weight: 400;
  font-style: normal;
  font-display: swap;
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
  font-family: "Inter", sans-serif;
}

info-box {
  --info-box-background-start-rgb: 255, 255, 255;
  --info-box-background-end-rgb: 255, 255, 255;
  --info-box-foreground-rgb: 0, 0, 0;
  --info-box-border-rgb: 0, 0, 0;
}

/* Form base styles */
.form-container {
  display: flex;
  flex-direction: column;
  gap: 1rem; /* Adjust gap as needed */
}
.form-label {
  display: block; /* Ensures the label takes up the full width and positions above the input/textarea */
  margin-bottom: 0.5rem; /* Adds some space between the label and the input/textarea */
  color: #ccc; /* Lightened color as per instructions */
}

.form-container h1 {
  text-align: center;
  margin-bottom: 1rem;
}

.input,
.textarea {
  width: 100%; /* Makes inputs and textarea take up the full width of their container */
  padding: 0.5rem;
  border: 1px solid #ccc; /* Example border - change as needed */
  border-radius: 0.25rem;
  color: #ccc; /* Light text color */
}

.label {
  display: block;
  margin-bottom: 0.5rem;
  color: #333; /* or any color that fits your design */
}

.btn {
  padding: 0.5rem 1rem;
  background-color: #0056b3; /* Button color */
  color: white;
  border: none;
  border-radius: 0.25rem;
  cursor: pointer;
}

.btn:disabled {
  background-color: #ccc;
}

/* Media query for smaller screens */
@media (max-width: 768px) {
  .form-container {
    gap: 0.5rem;
  }
}

/* Add this class to your submit button */
.submit-button {
  width: 100%; /* Align the button width with inputs and textarea */
  padding: 0.5rem;
  background-color: #0056b3; /* Example button color - change as needed */
  color: white;
  border: none;
  border-radius: 0.25rem;
  cursor: pointer;
  margin-top: 1rem; /* Adds space between the last input and the button */
}

.hexagon {
  margin-top: 20%;
  margin-bottom: 1.5em;
  margin: auto;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  position: absolute;
  width: 15em;
  height: 15em;
  color: #ff0000;
}
.hexagon__group,
.hexagon__sector,
.hexagon__sector:before,
.hexagon__sector:after {
  position: absolute;
}
.hexagon__group {
  width: 100%;
  height: 100%;
}
.hexagon__group:nth-child(2) .hexagon__sector,
.hexagon__group:nth-child(2) .hexagon__sector:before,
.hexagon__group:nth-child(2) .hexagon__sector:after {
  animation-delay: calc(var(--dur) * -1 / 6);
}
.hexagon__group:nth-child(3) .hexagon__sector,
.hexagon__group:nth-child(3) .hexagon__sector:before,
.hexagon__group:nth-child(3) .hexagon__sector:after {
  animation-delay: calc(var(--dur) * -2 / 6);
}
.hexagon__group:nth-child(4) .hexagon__sector,
.hexagon__group:nth-child(4) .hexagon__sector:before,
.hexagon__group:nth-child(4) .hexagon__sector:after {
  animation-delay: calc(var(--dur) * -3 / 6);
}
.hexagon__group:nth-child(5) .hexagon__sector,
.hexagon__group:nth-child(5) .hexagon__sector:before,
.hexagon__group:nth-child(5) .hexagon__sector:after {
  animation-delay: calc(var(--dur) * -4 / 6);
}
.hexagon__group:nth-child(6) .hexagon__sector,
.hexagon__group:nth-child(6) .hexagon__sector:before,
.hexagon__group:nth-child(6) .hexagon__sector:after {
  animation-delay: calc(var(--dur) * -5 / 6);
}
.hexagon__group:nth-child(odd) {
  transform: rotate(30deg);
}
.hexagon__sector,
.hexagon__sector:before,
.hexagon__sector:after {
  animation-duration: var(--dur);
  animation-iteration-count: infinite;
  animation-timing-function: linear;
  /*animation-play-state: paused;*/
  width: 0.1em;
  height: 0.1em;
  color: #ff0000;
}
.hexagon__sector {
  animation-name: moveOut1;
  top: calc(50% - 0.1em);
  left: calc(50% - 0.1em);
}
.hexagon__sector:nth-child(2) {
  animation-name: moveOut2;
}
.hexagon__sector:nth-child(3) {
  animation-name: moveOut3;
}
.hexagon__sector:nth-child(4) {
  animation-name: moveOut4;
}
.hexagon__sector:nth-child(5) {
  animation-name: moveOut5;
}
.hexagon__sector:nth-child(6) {
  animation-name: moveOut6;
}
.hexagon__sector:before,
.hexagon__sector:after {
  animation-name: ripple;
  background-color: currentColor;
  border-radius: 0.1em;
  content: "";
  top: 0;
  left: 0;
  transform-origin: 0.1em 0.1em;
}
.hexagon__sector:before {
  transform: rotate(-30deg);
}
.hexagon__sector:after {
  transform: rotate(-150deg);
}

@keyframes moveOut1 {
  from {
    transform: translateY(0) scale(0);
  }
  3% {
    transform: translateY(0.2em) scale(1);
  }
  97% {
    transform: translateY(7.3em) scale(1);
  }
  to {
    transform: translateY(7.5em) scale(0);
  }
}
@keyframes moveOut2 {
  from {
    transform: rotate(60deg) translateY(0) scale(0);
  }
  3% {
    transform: rotate(60deg) translateY(0.2em) scale(1);
  }
  97% {
    transform: rotate(60deg) translateY(7.3em) scale(1);
  }
  to {
    transform: rotate(60deg) translateY(7.5em) scale(0);
  }
}
@keyframes moveOut3 {
  from {
    transform: rotate(120deg) translateY(0) scale(0);
  }
  3% {
    transform: rotate(120deg) translateY(0.2em) scale(1);
  }
  97% {
    transform: rotate(120deg) translateY(7.3em) scale(1);
  }
  to {
    transform: rotate(120deg) translateY(7.5em) scale(0);
  }
}
@keyframes moveOut4 {
  from {
    transform: rotate(180deg) translateY(0) scale(0);
  }
  3% {
    transform: rotate(180deg) translateY(0.2em) scale(1);
  }
  97% {
    transform: rotate(180deg) translateY(7.3em) scale(1);
  }
  to {
    transform: rotate(180deg) translateY(7.5em) scale(0);
  }
}
@keyframes moveOut5 {
  from {
    transform: rotate(240deg) translateY(0) scale(0);
  }
  3% {
    transform: rotate(240deg) translateY(0.2em) scale(1);
  }
  97% {
    transform: rotate(240deg) translateY(7.3em) scale(1);
  }
  to {
    transform: rotate(240deg) translateY(7.5em) scale(0);
  }
}
@keyframes moveOut6 {
  from {
    transform: rotate(300deg) translateY(0) scale(0);
  }
  3% {
    transform: rotate(300deg) translateY(0.2em) scale(1);
  }
  97% {
    transform: rotate(300deg) translateY(7.3em) scale(1);
  }
  to {
    transform: rotate(300deg) translateY(7.5em) scale(0);
  }
}
@keyframes ripple {
  from,
  to {
    width: 0.2em;
  }
  33% {
    width: 2.4em;
  }
}
